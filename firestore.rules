rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone on the internet to view, edit, and delete
    // all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // your app will lose access to your Firestore database
    //match /{document=**} {
    //  allow read, write: if request.time < timestamp.date(2020, 4, 21);
    //}
    
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid != null && request.auth.uid == userId;
    	allow create: if request.auth.uid != null;
    }
    match /readOnlyUsersInfo/{username} {
    	allow update, delete: if request.auth.uid != null && username == resource.data.username;
    	allow create: if request.auth.uid != null;
      allow read: if true;
    }
	// ****************************************************
    // Set rules for the collection group productsInfo
    match /{path=**}/productsInfo/{productId} {
      allow read: if true;
    }
    match /allProducts/{userId}/{document=**} {
      allow delete: if request.auth.uid != null && request.auth.uid == userId;
      allow create, update: if request.auth.uid != null;
    	allow read: if true;
    }
	// ****************************************************
    // Set rules for the collection group articlesInfo
    match /{path=**}/articlesInfo/{articleId} {
      allow read: if true;
    }
    match /allPosts/{userId}/articlesInfo/{articleId} {
      allow delete: if request.auth.uid != null && (request.auth.uid == userId || resource.data.username == userId);
      allow create, update: if request.auth.uid != null;
    	allow read: if true;
    }
	// ****************************************************
    // Set rules for the collection group projectsInfo
    match /{path=**}/projectsInfo/{projectId} {
      allow read: if true;
    }
    match /allProjects/{userId}/projectsInfo/{projectId} {
      allow delete: if request.auth.uid != null && (request.auth.uid == userId || resource.data.username == userId);
      allow create, update: if request.auth.uid != null;
    	allow read: if true;
    }
  }
}